{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  isAdmin() {\n    // Logic to check if user is an admin\n    return true; // Replace with your authentication logic\n  }\n\n  isUser() {\n    // Logic to check if user is a regular user\n    return true; // Replace with your authentication logic\n  }\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","isAdmin","isUser","factory","ɵfac","providedIn"],"sources":["D:\\full stack mern,mean,java\\plasma_donor_app\\client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["// auth.service.ts\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  isAdmin(): boolean {\r\n    // Logic to check if user is an admin\r\n    return true; // Replace with your authentication logic\r\n  }\r\n\r\n  isUser(): boolean {\r\n    // Logic to check if user is a regular user\r\n    return true; // Replace with your authentication logic\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,WAAW;EACtBC,OAAOA,CAAA;IACL;IACA,OAAO,IAAI,CAAC,CAAC;EACf;;EAEAC,MAAMA,CAAA;IACJ;IACA,OAAO,IAAI,CAAC,CAAC;EACf;;;AATWF,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAG,OAAA,EAAXH,WAAW,CAAAI,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}